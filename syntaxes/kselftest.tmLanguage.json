{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "kselftest",
	"patterns": [
		{
			"include": "#make"
		},
		{
			"include": "#sh"
		},
		{
			"include": "#tests"
		}
	],
	"repository": {
		"make": {
			"patterns": [
				{
					"name": "meta.make.call.kselftest",
					"match": "^  ([A-Z]+) +(.+)$",
					"captures": {
						"1": {
							"name": "entity.name.function.call.make.kselftest"
						},
						"2": {
							"name": "variable.parameter.make.kselftest"
						}
					}
				},
				{
					"name": "meta.make.log.kselftest",
					"match": "^(make\\[[0-9]+\\])(:) (.+)$",
					"captures": {
						"1": {
							"name": "log.verbose.make.head.kselftest"
						},
						"2": {
							"name": "log.verbose.make.separator.kselftest"
						},
						"3": {
							"name": "log.verbose.make.tail.kselftest"
						}
					}
				},
				{
					"name": "meta.make.warning.kselftest",
					"match": "^([^:]+)(:)(?:([0-9]+)(:))?(?:([0-9]+)(:))? (warning)(:) (.+)$",
					"captures": {
						"1": {
							"name": "log.warning.make.head.kselftest"
						},
						"2": {
							"name": "log.warning.make.separator.kselftest"
						},
						"3": {
							"name": "log.warning.make.lineno.kselftest"
						},
						"4": {
							"name": "log.warning.make.separator.kselftest"
						},
						"5": {
							"name": "log.warning.make.charno.kselftest"
						},
						"6": {
							"name": "log.warning.make.separator.kselftest"
						},
						"7": {
							"name": "log.warning.make.warning.kselftest"
						},
						"8": {
							"name": "log.warning.make.separator.kselftest"
						},
						"9": {
							"name": "log.warning.make.tail.kselftest"
						}
					}
				},
				{
					"name": "meta.make.error.kselftest",
					"match": "^([^:]+)(:)(?:([0-9]+)(:))?(?:([0-9]+)(:))? (error)(:) (.+)$",
					"captures": {
						"1": {
							"name": "log.error.make.head.kselftest"
						},
						"2": {
							"name": "log.error.make.separator.kselftest"
						},
						"3": {
							"name": "log.error.make.lineno.kselftest"
						},
						"4": {
							"name": "log.error.make.separator.kselftest"
						},
						"5": {
							"name": "log.error.make.charno.kselftest"
						},
						"6": {
							"name": "log.error.make.separator.kselftest"
						},
						"7": {
							"name": "log.error.make.error.kselftest"
						},
						"8": {
							"name": "log.error.make.separator.kselftest"
						},
						"9": {
							"name": "log.error.make.tail.kselftest"
						}
					}
				}
			]
		},
		"sh": {
			"patterns": [
				{
					"name": "meta.sh.error.kselftest",
					"match": "^(/bin/sh)(:) (line [0-9]+)(:) (.+)$",
					"captures": {
						"1": {
							"name": "log.error.sh.head.kselftest"
						},
						"2": {
							"name": "log.error.sh.separator.kselftest"
						},
						"3": {
							"name": "log.error.sh.lineno.kselftest"
						},
						"4": {
							"name": "log.error.sh.separator.kselftest"
						},
						"5": {
							"name": "log.error.sh.error.kselftest"
						}
					}
				},
				{
					"name": "meta.ld.error.kselftest",
					"match": "^(/bin/ld)(:) (.+)$",
					"captures": {
						"1": {
							"name": "log.error.ld.head.kselftest"
						},
						"2": {
							"name": "log.error.ld.separator.kselftest"
						},
						"3": {
							"name": "log.error.ld.error.kselftest"
						}
					}
				},
				{
					"name": "meta.sh.call.kselftest",
					"match": "^(gcc)( .+)$",
					"captures": {
						"1": {
							"name": "entity.name.function.call.sh.kselftest"
						},
						"2": {
							"patterns": [
								{
									"name": "meta.sh.call.option.long.kselftest",
									"match": " (-)([A-Za-z0-9-_]+)(=)([^ ]*)",
									"captures": {
										"1": {
											"name": "punctuation.kselftest"
										},
										"2": {
											"name": "variable.parameter.key.kselftest"
										},
										"3": {
											"name": "punctuation.kselftest"
										},
										"4": {
											"name": "variable.parameter.kselftest"
										}
									}
								},
								{
									"name": "meta.sh.call.option.short.kselftest",
									"match": " (-)([A-Za-z])([^ ]*)",
									"captures": {
										"1": {
											"name": "punctuation.kselftest"
										},
										"2": {
											"name": "variable.parameter.key.kselftest"
										},
										"3": {
											"name": "variable.parameter.kselftest"
										}
									}
								}
							]
						}
					}
				}
			]
		},
		"tests": {
			"patterns": [
				{
					"name": "meta.test.fail.kselftest",
					"match": "^(not ok) ([0-9]+) (selftests)(:) (.+)$",
					"captures": {
						"1": {
							"name": "log.error.fail.notok.kselftest"
						},
						"2": {
							"name": "log.error.fail.qty.kselftest"
						},
						"3": {
							"name": "log.error.fail.selftests.kselftest"
						},
						"4": {
							"name": "log.error.fail.separator.kselftest"
						},
						"5": {
							"name": "log.error.fail.tail.kselftest"
						}
					}
				},
				{
					"name": "meta.test.pass.kselftest",
					"match": "^(ok) ([0-9]+) (selftests)(:) (.+)$",
					"captures": {
						"1": {
							"name": "log.info.pass.ok.kselftest"
						},
						"2": {
							"name": "log.info.pass.qty.kselftest"
						},
						"3": {
							"name": "log.info.pass.selftests.kselftest"
						},
						"4": {
							"name": "log.info.pass.separator.kselftest"
						},
						"5": {
							"name": "log.info.pass.tail.kselftest"
						}
					}
				},
				{
					"name": "meta.test.nestnest.kselftest",
					"match": "^(# )(# )(.+)$",
					"captures": {
						"1": {
							"name": "log.debug.nestnest.hash.kselftest"
						},
						"2": {
							"name": "log.debug.nestnest.hashhash.kselftest"
						},
						"3": {
							"name": "log.debug.nestnest.tail.kselftest"
						}
					}
				},
				{
					"name": "meta.test.nest.kselftest",
					"match": "^(# )(.+)$",
					"captures": {
						"1": {
							"name": "log.verbose.nest.hash.kselftest"
						},
						"2": {
							"name": "log.verbose.nest.tail.kselftest"
						}
					}
				}
			]
		}
	},
	"scopeName": "source.kselftest"
}